// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from recognizer.djinni

#import "BNBFaceSearchMode.h"
#import "BNBFeatureId.h"
#import "BNBFrameData.h"
#import <Foundation/Foundation.h>
@class BNBRecognizer;
@protocol BNBFeature;


@interface BNBRecognizer : NSObject

+ (nullable BNBRecognizer *)create;

+ (int64_t)getFeatureId:(BNBFeatureId)feature;

- (nullable id<BNBFeature>)getFeature:(BNBFeatureId)feature;

- (void)setFeatures:(nonnull NSSet<NSNumber *> *)features;

- (void)addFeature:(nullable id<BNBFeature>)feature
      dependencies:(nonnull NSSet<NSNumber *> *)dependencies
          needsGpu:(BOOL)needsGpu;

- (void)removeFeature:(nullable id<BNBFeature>)feature;

/** sets maximum allowed face results, if face tracking feature is present */
- (void)setMaxFaces:(int32_t)num;

- (void)setOfflineMode:(BOOL)on;

/**
 * Set flag which enable NN's features. True by default, if device compatible with NN player
 * When this flag is false, recognizer will skip NN-dependent features during set_features call.
 * In case when device have no NN player support (is_device_nn_compatible return false),
 * setting enable to true have no any effect
 */
- (void)setNnEnable:(BOOL)enable;

- (BOOL)getNnEnable;

/** Check if device compatible with NN player. */
- (BOOL)isDeviceNnCompatible;

/** Clear pipeline state and set face search mode */
- (void)setFaceSearchMode:(BNBFaceSearchMode)mode;

- (void)process:(nullable BNBFrameData *)frameData;

@end
